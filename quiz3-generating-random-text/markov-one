
/**
 * Write a description of class MarkovZero here.
 * 
 * @author Duke Software
 * @version 1.0
 */

import java.util.*;

public class MarkovOne {
    private String myText;
    private Random myRandom;
    
    public MarkovOne() {
        myRandom = new Random();
    }
    
    public void setRandom(int seed){
        myRandom = new Random(seed);
    }
    
    public void setTraining(String s){
        myText = s.trim();
    }
    
    public ArrayList<String> getFollows(String key){
        ArrayList<String> follows = new ArrayList<String>();
        int pos=0;
        while(pos < myText.length()){
            int index=myText.indexOf(key, pos);
            //my code here: if(index + key.length() == myText.length())
            if(index + key.length() >= myText.length()-1)
                break;
            else if(index!=-1){
                follows.add(Character.toString(myText.charAt(index+key.length())));
            }
            else{
                return follows;
            }
            pos = index+1;
        }
        return follows;
    }
    public String getRandomText(int numChars){
        StringBuffer sb = new StringBuffer();
        int index = myRandom.nextInt(myText.length()-1);
        String key = myText.substring(index, index+1);
        sb.append(key);
        for(int i = 0; i < numChars - 1; i++){
            ArrayList<String> follows = getFollows(key);
           /* if(follows.size()==0){
                break;
            }*/
            if(follows == null){
                System.out.println("The follows for key "+key+" is null.");
                break;
            }
            index = myRandom.nextInt(follows.size());
            String next = follows.get(index);
            sb.append(next);
            key = next;
        }
        return sb.toString();
    }
}


